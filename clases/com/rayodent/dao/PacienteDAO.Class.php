<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 12-12-2011
 */
class PacienteDAO {

    public static function insertarPaciente(Paciente $oPaciente) {
        $db = DbManager::getConnection();

        $cd_paciente = $oPaciente->getCd_paciente();
        $ds_apynom = $oPaciente->getDs_apynom();
        $cd_tipodoc = $oPaciente->getCd_tipodoc();
        $nu_doc = $oPaciente->getNu_doc();
        $ds_direccion = $oPaciente->getDs_direccion();
        $ds_telefono = $oPaciente->getDs_telefono();
        $ds_email = $oPaciente->getDs_email();
        $dt_nacimiento = $oPaciente->getDt_nacimiento();
        $dt_nacimiento = FormatUtils::ifEmpty($oPaciente->getDt_nacimiento(), 'null');

        $sql = "INSERT INTO paciente (ds_apynom, cd_tipodoc, nu_doc, ds_direccion, ds_telefono, ds_email, dt_nacimiento) VALUES('$ds_apynom', '$cd_tipodoc', '$nu_doc', '$ds_direccion', '$ds_telefono', '$ds_email', $dt_nacimiento)";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $id = $db->sql_nextid();
        $oPaciente->setCd_paciente($id);

        $db->sql_freeresult($result);
    }

    public static function modificarPaciente(Paciente $oPaciente) {
        $db = DbManager::getConnection();


        $cd_paciente = $oPaciente->getCd_paciente();

        $ds_apynom = $oPaciente->getDs_apynom();

        $cd_tipodoc = $oPaciente->getCd_tipodoc();

        $nu_doc = $oPaciente->getNu_doc();

        $ds_direccion = $oPaciente->getDs_direccion();

        $ds_telefono = $oPaciente->getDs_telefono();

        $ds_email = $oPaciente->getDs_email();

		$dt_nacimiento = FormatUtils::ifEmpty($oPaciente->getDt_nacimiento(), 'null');

        $sql = "UPDATE paciente SET ds_apynom = '$ds_apynom', cd_tipodoc = '$cd_tipodoc', nu_doc = '$nu_doc', ds_direccion = '$ds_direccion', ds_telefono = '$ds_telefono', ds_email = '$ds_email', dt_nacimiento = $dt_nacimiento WHERE cd_paciente = $cd_paciente ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarPaciente(Paciente $oPaciente) {
        $db = DbManager::getConnection();

        $cd_paciente = $oPaciente->getCd_paciente();

        $sql = "DELETE FROM paciente WHERE cd_paciente = $cd_paciente ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());


        $db->sql_freeresult($result);
    }

    public static function getPacientes(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM paciente P";
        $sql .= " LEFT JOIN tipodocumento TD ON (P.cd_tipodoc = TD. cd_tipodocumento)";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PacienteFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantPacientes(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM paciente P";
        $sql .= " LEFT JOIN tipodocumento TD ON (P.cd_tipodoc = TD. cd_tipodocumento)";
        $sql .= $criterio->buildFiltroSinPaginar();
        
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getPaciente(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM paciente P";
        $sql .= " LEFT JOIN tipodocumento TD ON (P.cd_tipodoc = TD. cd_tipodocumento)";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new PacienteFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

}
?>
