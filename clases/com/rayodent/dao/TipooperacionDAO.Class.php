<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 05-12-2011
 */
class TipooperacionDAO {

    public static function insertarTipooperacion(Tipooperacion $oTipooperacion) {
        $db = DbManager::getConnection();


        $cd_tipooperacion = $oTipooperacion->getCd_tipooperacion();

        $ds_tipooperacion = $oTipooperacion->getDs_tipooperacion();


        $sql = "INSERT INTO tipooperacion (ds_tipooperacion) VALUES('$ds_tipooperacion')";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function modificarTipooperacion(Tipooperacion $oTipooperacion) {
        $db = DbManager::getConnection();


        $cd_tipooperacion = $oTipooperacion->getCd_tipooperacion();

        $ds_tipooperacion = $oTipooperacion->getDs_tipooperacion();



        $sql = "UPDATE tipooperacion SET ds_tipooperacion = '$ds_tipooperacion' WHERE cd_tipooperacion = $cd_tipooperacion ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarTipooperacion(Tipooperacion $oTipooperacion) {
        $db = DbManager::getConnection();

        $cd_tipooperacion = $oTipooperacion->getCd_tipooperacion();

        $sql = "DELETE FROM tipooperacion WHERE cd_tipooperacion = $cd_tipooperacion ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function getTipooperaciones(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM tipooperacion ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new TipooperacionFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantTipooperaciones(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM tipooperacion ";
        $sql .= $criterio->buildFiltroSinPaginar();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getTipooperacion(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM tipooperacion ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new TipooperacionFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

    public static function getCoeficiente($cd_tipooperacion) {
        $db = DbManager::getConnection();

        $sql = "SELECT nu_coeficiente as coef FROM tipooperacion ";
        $sql .= "WHERE cd_tipooperacion = " . addslashes($cd_tipooperacion);
       
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $coeficiente = $next['coef'];
        $db->sql_freeresult($result);
        return ((int) $coeficiente);
    }

}
?>
