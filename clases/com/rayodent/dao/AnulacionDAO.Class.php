<?php 

/** 
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 22-12-2011
 */ 
class AnulacionDAO { 

	public static function insertarAnulacion(Anulacion $oAnulacion) { 
		$db = DbManager::getConnection(); 

		
		$cd_anulacion = $oAnulacion->getCd_anulacion();
		
		$cd_movcaja = $oAnulacion->getCd_movcaja();
		
		$cd_movcajaconcepto = $oAnulacion->getCd_movcajaconcepto();
		
		$dt_anulacion = $oAnulacion->getDt_anulacion();
		
		$nu_caja = $oAnulacion->getNu_caja();
		
		$cd_usuario = $oAnulacion->getCd_usuario();
		
		$cd_turno = $oAnulacion->getCd_turno();
		
		$sql = "INSERT INTO anulacion (cd_movcaja, cd_movcajaconcepto, dt_anulacion, nu_caja, cd_usuario, cd_turno) VALUES('$cd_movcaja', '$cd_movcajaconcepto', '$dt_anulacion', '$nu_caja', '$cd_usuario', '$cd_turno')"; 

		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$db->sql_freeresult($result);
	}


	public static function modificarAnulacion(Anulacion $oAnulacion) { 
		$db = DbManager::getConnection(); 

		
		$cd_anulacion = $oAnulacion->getCd_anulacion();
		
		$cd_movcaja = $oAnulacion->getCd_movcaja();
		
		$cd_movcajaconcepto = $oAnulacion->getCd_movcajaconcepto();
		
		$dt_anulacion = $oAnulacion->getDt_anulacion();
		
		$nu_caja = $oAnulacion->getNu_caja();
		
		$cd_usuario = $oAnulacion->getCd_usuario();
		
		$cd_turno = $oAnulacion->getCd_turno();
		


		$sql = "UPDATE anulacion SET cd_movcaja = '$cd_movcaja', cd_movcajaconcepto = '$cd_movcajaconcepto', dt_anulacion = '$dt_anulacion', nu_caja = '$nu_caja', cd_usuario = '$cd_usuario', cd_turno = '$cd_turno' WHERE cd_anulacion = $cd_anulacion "; 

		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$db->sql_freeresult($result);
	}


	public static function eliminarAnulacion(Anulacion $oAnulacion) { 
		$db = DbManager::getConnection(); 

		$cd_anulacion = $oAnulacion->getCd_anulacion();

		$sql = "DELETE FROM anulacion WHERE cd_anulacion = $cd_anulacion "; 

		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$db->sql_freeresult($result);
	}


	public static function getAnulaciones(CriterioBusqueda $criterio) { 
		$db = DbManager::getConnection(); 


		$sql = "SELECT * FROM anulacion "; 
		$sql .= $criterio->buildFiltro();
		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$items = ResultFactory::toCollection($db, $result, new AnulacionFactory());
		$db->sql_freeresult($result);
		return $items;
	}


	public static function getCantAnulaciones(CriterioBusqueda $criterio) { 
		$db = DbManager::getConnection(); 


		$sql = "SELECT count(*) as count FROM anulacion "; 
		$sql .= $criterio->buildFiltroSinPaginar();
		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$next = $db->sql_fetchassoc($result);
		$cant = $next['count'];
		$db->sql_freeresult($result);
		return ((int) $cant);
	}


	public static function getAnulacion(CriterioBusqueda $criterio) { 
		$db = DbManager::getConnection(); 


		$sql = "SELECT * FROM anulacion "; 
		$sql .= $criterio->buildFiltro();
		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		if ($db->sql_numrows() > 0) {
			$temp = $db->sql_fetchassoc($result);
			$factory = new AnulacionFactory();
			$obj = $factory->build($temp);
		}
		$db->sql_freeresult($result);
		return $obj;
	}

} 
?>
