<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 28-10-2011
 */
class EmpleadoDAO {

    public static function insertarEmpleado(Empleado $oEmpleado) {
        $db = DbManager::getConnection();


        $cd_empleado = $oEmpleado->getCd_empleado();

        $cd_tipodocumento = $oEmpleado->getCd_tipodocumento();

        $nu_documento = $oEmpleado->getNu_documento();

        $ds_nombre = $oEmpleado->getDs_nombre();

        $cd_tipopersonal = $oEmpleado->getCd_tipopersonal();

        $ds_domicilio = $oEmpleado->getDs_domicilio();

        $ds_telefono = $oEmpleado->getDs_telefono();

        $ds_email = $oEmpleado->getDs_email();


        $sql = "INSERT INTO empleado (cd_tipodocumento, nu_documento, ds_nombre, cd_tipopersonal, ds_domicilio, ds_telefono, ds_email) VALUES('$cd_tipodocumento', '$nu_documento', '$ds_nombre', '$cd_tipopersonal', '$ds_domicilio', '$ds_telefono', '$ds_email')";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function modificarEmpleado(Empleado $oEmpleado) {
        $db = DbManager::getConnection();


        $cd_empleado = $oEmpleado->getCd_empleado();

        $cd_tipodocumento = $oEmpleado->getCd_tipodocumento();

        $nu_documento = $oEmpleado->getNu_documento();

        $ds_nombre = $oEmpleado->getDs_nombre();

        $cd_tipopersonal = $oEmpleado->getCd_tipopersonal();

        $ds_domicilio = $oEmpleado->getDs_domicilio();

        $ds_telefono = $oEmpleado->getDs_telefono();

        $ds_email = $oEmpleado->getDs_email();



        $sql = "UPDATE empleado SET cd_tipodocumento = '$cd_tipodocumento', nu_documento = '$nu_documento', ds_nombre = '$ds_nombre', cd_tipopersonal = '$cd_tipopersonal', ds_domicilio = '$ds_domicilio', ds_telefono = '$ds_telefono', ds_email = '$ds_email' WHERE cd_empleado = $cd_empleado ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarEmpleado(Empleado $oEmpleado) {
        $db = DbManager::getConnection();

        $cd_empleado = $oEmpleado->getCd_empleado();

        $sql = "DELETE FROM empleado WHERE cd_empleado = $cd_empleado ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function getEmpleados(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM empleado ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new EmpleadoFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantEmpleados(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM empleado ";
        $sql .= $criterio->buildFiltroSinPaginar();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getEmpleado(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM empleado E";
        $sql .= " INNER JOIN tipodocumento TD ON (E.cd_tipodocumento = TD.cd_tipodocumento) ";
        $sql .= " INNER JOIN tipopersonal TP ON (E.cd_tipopersonal = TP.cd_tipopersonal) ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new EmpleadoFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

}
?>
