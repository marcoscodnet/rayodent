<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 14-12-2011
 */
class PracticaordenpracticaDAO {

    public static function insertarPracticaordenpractica(Practicaordenpractica $oPracticaordenpractica) {
        $db = DbManager::getConnection();


        $cd_practicaordenpractica = $oPracticaordenpractica->getCd_practicaordenpractica();

        $cd_practicaobrasocial = $oPracticaordenpractica->getCd_practicaobrasocial();

        $cd_ordenpractica = $oPracticaordenpractica->getCd_ordenpractica();

        //$nu_cantplacas = $oPracticaordenpractica->getNu_cantplacas();
        $nu_cantplacas = ($oPracticaordenpractica->getNu_cantplacas()==null || trim($oPracticaordenpractica->getNu_cantplacas())=='' || $oPracticaordenpractica->getNu_cantplacas()==0)?0:$oPracticaordenpractica->getNu_cantplacas();

        $ds_pieza = $oPracticaordenpractica->getDs_pieza();
        
        $cd_aporteos = $oPracticaordenpractica->getCd_aporteos();

        //$nu_repeticiones = $oPracticaordenpractica->getNu_repeticiones();
        $nu_repeticiones = ($oPracticaordenpractica->getNu_repeticiones()==null || trim($oPracticaordenpractica->getNu_repeticiones())=='' || $oPracticaordenpractica->getNu_repeticiones()==0)?0:$oPracticaordenpractica->getNu_repeticiones();

        //$cd_informe = $oPracticaordenpractica->getCd_informe();
        $cd_informe = ($oPracticaordenpractica->getCd_informe()==null || trim($oPracticaordenpractica->getCd_informe())=='' || $oPracticaordenpractica->getCd_informe()==0)?0:$oPracticaordenpractica->getCd_informe();

        $cd_movcajaconcepto = $oPracticaordenpractica->getCd_movcajaconcepto();

        //$cd_liquidacionprofesional = $oPracticaordenpractica->getCd_liquidacionprofesional();
        $cd_liquidacionprofesional = ($oPracticaordenpractica->getCd_liquidacionprofesional()==null || trim($oPracticaordenpractica->getCd_liquidacionprofesional())=='' || $oPracticaordenpractica->getCd_liquidacionprofesional()==0)?0:$oPracticaordenpractica->getCd_liquidacionprofesional();


        $sql = "INSERT INTO practicaordenpractica (cd_practicaobrasocial, cd_ordenpractica, nu_cantplacas, nu_repeticiones, cd_informe, cd_movcajaconcepto, cd_liquidacionprofesional, cd_aporteos, ds_pieza) VALUES('$cd_practicaobrasocial', '$cd_ordenpractica', '$nu_cantplacas', '$nu_repeticiones', '$cd_informe', '$cd_movcajaconcepto', '$cd_liquidacionprofesional', '$cd_aporteos', '$ds_pieza')";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function modificarPracticaordenpractica(Practicaordenpractica $oPracticaordenpractica) {
        $db = DbManager::getConnection();

        $cd_practicaordenpractica = $oPracticaordenpractica->getCd_practicaordenpractica();
        $cd_practicaobrasocial = $oPracticaordenpractica->getCd_practicaobrasocial();
        $cd_ordenpractica = $oPracticaordenpractica->getCd_ordenpractica();
        $nu_cantplacas = $oPracticaordenpractica->getNu_cantplacas();
        $ds_pieza = $oPracticaordenpractica->getDs_pieza();
        $cd_aporteos = $oPracticaordenpractica->getCd_aporteos();
        $nu_repeticiones = $oPracticaordenpractica->getNu_repeticiones();
        $cd_informe = $oPracticaordenpractica->getCd_informe();
        $cd_movcajaconcepto = $oPracticaordenpractica->getCd_movcajaconcepto();
        $cd_liquidacionprofesional = $oPracticaordenpractica->getCd_liquidacionprofesional();

        $sql = "UPDATE practicaordenpractica SET cd_practicaobrasocial = '$cd_practicaobrasocial', cd_ordenpractica = '$cd_ordenpractica', nu_cantplacas = '$nu_cantplacas', nu_repeticiones = '$nu_repeticiones', cd_informe = '$cd_informe', cd_movcajaconcepto = '$cd_movcajaconcepto', cd_liquidacionprofesional = '$cd_liquidacionprofesional', cd_aporteos = '$cd_aporteos', ds_pieza = '$ds_pieza' WHERE cd_practicaordenpractica = $cd_practicaordenpractica ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarPracticaordenpractica(Practicaordenpractica $oPracticaordenpractica) {
        $db = DbManager::getConnection();

        $cd_practicaordenpractica = $oPracticaordenpractica->getCd_practicaordenpractica();

        $sql = "DELETE FROM practicaordenpractica WHERE cd_practicaordenpractica = $cd_practicaordenpractica ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function getPracticaordenpracticas(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();

        $sql = "SELECT POP.*, I.*, POS.*, P.*, OS.*, MCC.*, MC.*, PA.*, OP.dt_carga, SUM(POP.nu_cantplacas) as nu_cantplacas, SUM(case WHEN MCC.bl_digital=1 THEN 1 ELSE 0 END) AS nu_cantdigital, SUM(case WHEN (MCC.bl_digital IS NULL OR MCC.bl_digital=0) THEN 1 ELSE 0 END) AS nu_cantnodigital, SUM(MCC.nu_importe) as nu_importealiquidar, SUBSTRING(OP.dt_carga, -14,8) FROM practicaordenpractica POP ";
        $sql .= "LEFT JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();

        $sql .= " GROUP BY POS.cd_practica, SUBSTRING(OP.dt_carga, -14,8) ";
        $sql .= $criterio->buildORDERBY();
		
        // lo de substring lo puse xq la fecha tiene hhmmss y solo interesa el dï¿½a
        //CdtUtils::log_debug('SQL Obtener Practicas orden practica: ' . $sql);

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PracticaordenpracticaFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getPracticaordenpracticasTablemodel(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();

        $sql = "SELECT POP.*, I.*, POS.*, P.*, OS.*, MCC.*, MC.*, PA.*, OP.dt_carga, SUM(POP.nu_cantplacas) as nu_cantplacas,  SUBSTRING(OP.dt_carga, -14,8) FROM practicaordenpractica POP ";
        $sql .= "LEFT JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();
        $sql .= " GROUP BY POS.cd_practica, SUBSTRING(OP.dt_carga, -14,8) ";
        $sql .= $criterio->buildORDERBY();
        $sql .= $criterio->buildLimit();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PracticaordenpracticaFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantPracticaordenpracticasTableModel(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT count(*) as count FROM ";
        $sql .= "(SELECT count(*) as count FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();
        $sql .= " GROUP BY POS.cd_practica, SUBSTRING(OP.dt_carga, -14,8)) as todas ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getPracticaordenpracticasConsumidas(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();

        $sql = "SELECT POP.*, I.*, POS.*, P.*, OS.*, MCC.*, MC.*, PA.*, SUBSTRING(OP.dt_carga, -14,8) FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();
        $sql .= $criterio->buildORDERBY();
        // lo de substring lo puse xq la fecha tiene hhmmss y solo interesa el dï¿½a
        //CdtUtils::log_debug('SQL Obtener Practicas orden practica: ' . $sql);

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PracticaordenpracticaFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getPracticaordenpracticasDeLiquidacion(CriterioBusqueda $criterio, $valor, $tipo) {
        $db = DbManager::getConnection();
        $valor = addslashes($valor);
        if ($tipo == "f") {
            $sql = "SELECT POP.*, OP.*, I.*, POS.*, P.*, OS.*, MCC.*, MC.*, PA.*, $valor as nu_importealiquidar";
        } elseif ($tipo == "p") {
            $sql = "SELECT POP.*, OP.*, I.*, POS.*, P.*, OS.*, MCC.*, MC.*, PA.*, (MCC.nu_importe*$valor/100) as nu_importealiquidar ";
        } else {
            $sql = "SELECT POP.*, OP.*, I.*, POS.*, P.*, OS.*, MCC.*, MC.*, PA.* ";
        }
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildFiltro();


        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PracticaordenpracticaFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getTotalALiquidar(CriterioBusqueda $criterio, $valor, $tipo) {
        $db = DbManager::getConnection();
        $valor = addslashes($valor);
        if ($tipo == "f") {
            $sql = "SELECT POP.cd_practicaordenpractica, SUM($valor) as total)";
        } elseif ($tipo == "p") {
            $sql = "SELECT POP.cd_practicaordenpractica, SUM(MCC.nu_importe*$valor/100) as total ";
        } else {
            $sql = "SELECT POP.cd_practicaordenpractica, 0 as total  ";
        }
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();
        $sql .= " GROUP BY OP.cd_profesional";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['total'];

        $db->sql_freeresult($result);
        return ((float) $cant);
    }

    public static function getCantPracticaordenpracticas(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();

        $sql = "SELECT count(*) as count FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildFiltroSinPaginar();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getTotalPlacas(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT SUM(POP.nu_cantplacas) as totalplacas ";
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['totalplacas'];
        $db->sql_freeresult($result);
        return ((float) $cant);
    }

    public static function getTotalDigital(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT SUM(case WHEN MCC.bl_digital=1 THEN 1 ELSE 0 END) AS digital";
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['digital'];
        $db->sql_freeresult($result);
        return ((float) $cant);
    }

    public static function getTotalNoDigital(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT SUM(case WHEN (MCC.bl_digital IS NULL OR MCC.bl_digital=0) THEN 1 ELSE 0 END) AS nodigital";
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['nodigital'];
        $db->sql_freeresult($result);
        return ((float) $cant);
    }
    
	public static function getTotalMontoPlacas(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT SUM(MCC.nu_importe) as totalplacas ";
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['totalplacas'];
        $db->sql_freeresult($result);
        return ((float) round($cant,2));
    }

    public static function getTotalPacientes(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT count( * )  as totalpaciente FROM (";
        $sql .= "SELECT OP.cd_paciente ";
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();
        $sql .= " GROUP BY OP.cd_paciente) as rta ";

        //echo "<br/>".$sql."<br/>";
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['totalpaciente'];
        $db->sql_freeresult($result);
        return ((float) $cant);
    }

    public static function getTotalPlacasPorPractica(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();
        $sql = "SELECT POP.*, POS.*, P.ds_practica, SUM(POP.nu_cantplacas) as nu_cantplacas, SUM(case WHEN MCC.bl_digital=1 THEN 1 ELSE 0 END) AS nu_cantdigital, SUM(case WHEN (MCC.bl_digital IS NULL OR MCC.bl_digital=0) THEN 1 ELSE 0 END) AS nu_cantnodigital, SUM(MCC.nu_importe) as nu_importealiquidar ";
        $sql .= " FROM practicaordenpractica POP ";
        $sql .= "INNER JOIN ordenpractica OP ON(OP.cd_ordenpractica = POP.cd_ordenpractica) ";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN obrasocial OS ON(OS.cd_obrasocial = POS.cd_obrasocial) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN movcaja MC ON(MC.cd_movcaja = MCC.cd_movcaja) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= $criterio->buildWHERE();
        $sql .= " GROUP BY POS.cd_practica";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PracticaordenpracticaFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getPracticaordenpractica(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM practicaordenpractica POP";
        $sql .= " LEFT JOIN ordenpractica OP ON (OP.cd_ordenpractica = POP.cd_ordenpractica)";
        $sql .= "LEFT JOIN practicaobrasocial POS ON(POP.cd_practicaobrasocial = POS.cd_practicaobrasocial) ";
        $sql .= " LEFT JOIN obrasocial OS ON (POS.cd_obrasocial = OS.cd_obrasocial)";
        $sql .= "LEFT JOIN informe I ON(POP.cd_informe = I.cd_informe) ";
        $sql .= "LEFT JOIN practica P ON(P.cd_practica = POS.cd_practica) ";
        $sql .= "LEFT JOIN movcajaconcepto MCC ON(POP.cd_movcajaconcepto = MCC.cd_movcajaconcepto) ";
        $sql .= "LEFT JOIN paciente PA ON(OP.cd_paciente = PA.cd_paciente) ";
        $sql .= "LEFT JOIN tipodocumento TD ON(PA.cd_tipodoc = TD.cd_tipodocumento) ";
        $sql .= "LEFT JOIN profesional PR ON(OP.cd_profesional = PR.cd_profesional) ";

        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new PracticaordenpracticaFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

	public static function getPracticaordenpracticasByPracticaObraSocialDtVigencia( $cd_practica, $cd_obrasocial, $dt_vigencia ) {
        $db = DbManager::getConnection();

        $sql = " select POP.*
				from practicaordenpractica POP,
				ordenpractica OP,
				practicaobrasocial POS
				WHERE OP.cd_obrasocial='$cd_obrasocial' 
				AND POP.cd_ordenpractica = OP.cd_ordenpractica
				AND POP.cd_practicaobrasocial = POS.cd_practicaobrasocial
				AND OP.dt_carga >= '$dt_vigencia'
				AND POS.cd_obrasocial=OP.cd_obrasocial 
				AND POS.cd_practica = '$cd_practica' ";
        		
        // lo de substring lo puse xq la fecha tiene hhmmss y solo interesa el dï¿½a
        //CdtUtils::log_debug('SQL Obtener Practicas Orden Prï¿½cticas para actualizar precios: ' . $sql);

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new PracticaordenpracticaFactory());
        $db->sql_freeresult($result);
        return $items;
    }
    
	public static function modificarPracticaObraSocial( $ids,  $cd_practicaobrasocial ){
    	
		$db = DbManager::getConnection();

		$strIds = implode($ids, ",");
		
        $sql = "UPDATE practicaordenpractica SET cd_practicaobrasocial = '$cd_practicaobrasocial' WHERE cd_practicaordenpractica IN ( $strIds ) ";

        //CdtUtils::log_debug('SQL actualizando precios: ' . $sql);
        
        $result = $db->sql_query($sql);
        
        //CdtUtils::log_debug("SQL actualizando precios sobre $result filas");
        
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);    	
    	
    }
    
	public static function eliminarPracticaordenpracticaPorOrdenpractica($cd_ordenpractica) {
        $db = DbManager::getConnection();


        $sql = "DELETE FROM practicaordenpractica WHERE cd_ordenpractica = $cd_ordenpractica ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }
}
?>
