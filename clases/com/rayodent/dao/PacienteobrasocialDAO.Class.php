<?php 

/** 
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 12-12-2011
 */ 
class PacienteobrasocialDAO { 

	public static function insertarPacienteobrasocial(Pacienteobrasocial $oPacienteobrasocial) { 
		$db = DbManager::getConnection(); 

		
		$cd_pacienteobrasocial = $oPacienteobrasocial->getCd_pacienteobrasocial();
		
		$cd_paciente = $oPacienteobrasocial->getCd_paciente();
		
		$cd_obrasocial = $oPacienteobrasocial->getCd_obrasocial();
		

		$sql = "INSERT INTO pacienteobrasocial (cd_paciente, cd_obrasocial) VALUES('$cd_paciente', '$cd_obrasocial')"; 

		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$db->sql_freeresult($result);
	}


	public static function modificarPacienteobrasocial(Pacienteobrasocial $oPacienteobrasocial) { 
		$db = DbManager::getConnection(); 

		
		$cd_pacienteobrasocial = $oPacienteobrasocial->getCd_pacienteobrasocial();
		
		$cd_paciente = $oPacienteobrasocial->getCd_paciente();
		
		$cd_obrasocial = $oPacienteobrasocial->getCd_obrasocial();
		


		$sql = "UPDATE pacienteobrasocial SET cd_paciente = '$cd_paciente', cd_obrasocial = '$cd_obrasocial' WHERE cd_pacienteobrasocial = $cd_pacienteobrasocial "; 

		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$db->sql_freeresult($result);
	}


	public static function eliminarPacienteobrasocial(Pacienteobrasocial $oPacienteobrasocial) { 
		$db = DbManager::getConnection(); 

		$cd_pacienteobrasocial = $oPacienteobrasocial->getCd_pacienteobrasocial();

		$sql = "DELETE FROM pacienteobrasocial WHERE cd_pacienteobrasocial = $cd_pacienteobrasocial "; 

		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$db->sql_freeresult($result);
	}


	public static function getPacientesobrasociales(CriterioBusqueda $criterio) { 
		$db = DbManager::getConnection(); 


		$sql = "SELECT * FROM pacienteobrasocial PO";
                $sql .= " INNER JOIN obrasocial O ON (PO.cd_obrasocial = O.cd_obrasocial)";
		$sql .= $criterio->buildFiltro();
		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$items = ResultFactory::toCollection($db, $result, new PacienteobrasocialFactory());
		$db->sql_freeresult($result);
		return $items;
	}


	public static function getCantPacientesobrasociales(CriterioBusqueda $criterio) { 
		$db = DbManager::getConnection(); 


		$sql = "SELECT count(*) as count FROM pacienteobrasocial "; 
		$sql .= $criterio->buildFiltroSinPaginar();
		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		$next = $db->sql_fetchassoc($result);
		$cant = $next['count'];
		$db->sql_freeresult($result);
		return ((int) $cant);
	}


	public static function getPacienteobrasocial(CriterioBusqueda $criterio) { 
		$db = DbManager::getConnection(); 


		$sql = "SELECT * FROM pacienteobrasocial "; 
		$sql .= $criterio->buildFiltro();
		$result = $db->sql_query($sql);
		if (!$result)//hubo un error en la bbdd.
			throw new DBException($db->sql_error());

		if ($db->sql_numrows() > 0) {
			$temp = $db->sql_fetchassoc($result);
			$factory = new PacienteobrasocialFactory();
			$obj = $factory->build($temp);
		}
		$db->sql_freeresult($result);
		return $obj;
	}

} 
?>
