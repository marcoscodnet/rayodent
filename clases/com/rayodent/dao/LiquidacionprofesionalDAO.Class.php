<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 11-01-2012
 */
class LiquidacionprofesionalDAO {

    public static function insertarLiquidacionprofesional(Liquidacionprofesional $oLiquidacionprofesional) {
        $db = DbManager::getConnection();
        $cd_liquidacionprofesional = $oLiquidacionprofesional->getCd_liquidacionprofesional();
        $cd_movcaja = $oLiquidacionprofesional->getCd_movcaja();
        $cd_profesional = $oLiquidacionprofesional->getCd_profesional();
        $dt_desde = $oLiquidacionprofesional->getDt_desde();
        $dt_hasta = $oLiquidacionprofesional->getDt_hasta();
        $nu_valor = $oLiquidacionprofesional->getNu_valor();
        $tipo = $oLiquidacionprofesional->getTipo();
       
        $sql = "INSERT INTO liquidacionprofesional (cd_movcaja, cd_profesional, dt_desde, dt_hasta, nu_valor, tipo) VALUES('$cd_movcaja', '$cd_profesional', '$dt_desde', '$dt_hasta', '$nu_valor', '$tipo')";
        
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $id = $db->sql_nextid();
        $oLiquidacionprofesional->setCd_liquidacionprofesional($id);

        $db->sql_freeresult($result);
    }

    public static function modificarLiquidacionprofesional(Liquidacionprofesional $oLiquidacionprofesional) {
        $db = DbManager::getConnection();


        $cd_liquidacionprofesional = $oLiquidacionprofesional->getCd_liquidacionprofesional();

        $cd_movcaja = $oLiquidacionprofesional->getCd_movcaja();

        $cd_profesional = $oLiquidacionprofesional->getCd_profesional();

        $dt_desde = $oLiquidacionprofesional->getDt_desde();

        $dt_hasta = $oLiquidacionprofesional->getDt_hasta();



        $sql = "UPDATE liquidacionprofesional SET cd_movcaja = '$cd_movcaja', cd_profesional = '$cd_profesional', dt_desde = '$dt_desde', dt_hasta = '$dt_hasta' WHERE cd_liquidacionprofesional = $cd_liquidacionprofesional ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarLiquidacionprofesional(Liquidacionprofesional $oLiquidacionprofesional) {
        $db = DbManager::getConnection();

        $cd_liquidacionprofesional = $oLiquidacionprofesional->getCd_liquidacionprofesional();

        $sql = "DELETE FROM liquidacionprofesional WHERE cd_liquidacionprofesional = $cd_liquidacionprofesional ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function getLiquidacionprofesionales(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM liquidacionprofesional ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new LiquidacionprofesionalFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantLiquidacionprofesionales(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM liquidacionprofesional ";
        $sql .= $criterio->buildFiltroSinPaginar();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getLiquidacionprofesional(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM liquidacionprofesional ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new LiquidacionprofesionalFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

}
?>
