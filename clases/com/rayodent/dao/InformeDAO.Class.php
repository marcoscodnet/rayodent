<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 14-12-2011
 */
class InformeDAO {

    public static function insertarInforme(Informe $oInforme) {
        $db = DbManager::getConnection();


        $cd_informe = $oInforme->getCd_informe();

        $ds_apynom = $oInforme->getDs_apynom();

        $ds_profesional = $oInforme->getDs_profesional();

        $ds_estudiorx = $oInforme->getDs_estudiorx();

        $ds_informe = $oInforme->getDs_informe();


        $sql = "INSERT INTO informe (ds_apynom, ds_profesional, ds_estudiorx, ds_informe) VALUES('$ds_apynom', '$ds_profesional', '$ds_estudiorx', '$ds_informe')";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());
        $id = $db->sql_nextid();
        $oInforme->setCd_informe($id);
        $db->sql_freeresult($result);
    }

    public static function modificarInforme(Informe $oInforme) {
        $db = DbManager::getConnection();


        $cd_informe = $oInforme->getCd_informe();

        $ds_apynom = $oInforme->getDs_apynom();

        $ds_profesional = $oInforme->getDs_profesional();

        $ds_estudiorx = $oInforme->getDs_estudiorx();

        $ds_informe = $oInforme->getDs_informe();



        $sql = "UPDATE informe SET ds_apynom = '$ds_apynom', ds_profesional = '$ds_profesional', ds_estudiorx = '$ds_estudiorx', ds_informe = '$ds_informe' WHERE cd_informe = $cd_informe ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarInforme(Informe $oInforme) {
        $db = DbManager::getConnection();

        $cd_informe = $oInforme->getCd_informe();

        $sql = "DELETE FROM informe WHERE cd_informe = $cd_informe ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function getInformes(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM informe ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new InformeFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantInformes(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM informe ";
        $sql .= $criterio->buildFiltroSinPaginar();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getInforme(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM informe ";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new InformeFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

}
?>
