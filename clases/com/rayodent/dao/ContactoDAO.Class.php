<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 12-12-2011
 */
class ContactoDAO {

    public static function insertarContacto(Contacto $oContacto) {
        $db = DbManager::getConnection();

        $cd_contacto = $oContacto->getCd_contacto();
        $ds_apynom = $oContacto->getDs_apynom();
        
        $ds_direccion = $oContacto->getDs_direccion();
        $ds_telefono = $oContacto->getDs_telefono();
        $ds_movil = $oContacto->getDs_movil();
        $ds_telefonotrabajo = $oContacto->getDs_telefonotrabajo();
        $ds_email = $oContacto->getDs_email();
        $nu_documento = $oContacto->getNu_documento();
        $nu_cuit = $oContacto->getNu_cuit();

        $sql = "INSERT INTO contacto (ds_apynom, ds_movil, ds_telefonotrabajo, ds_direccion, ds_telefono, ds_email, nu_documento, nu_cuit) VALUES('$ds_apynom', '$ds_movil', '$ds_telefonotrabajo', '$ds_direccion', '$ds_telefono', '$ds_email', '$nu_documento', '$nu_cuit')";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $id = $db->sql_nextid();
        $oContacto->setCd_contacto($id);

        $db->sql_freeresult($result);
    }

    public static function modificarContacto(Contacto $oContacto) {
        $db = DbManager::getConnection();


        $cd_contacto = $oContacto->getCd_contacto();

        $ds_apynom = $oContacto->getDs_apynom();

        $ds_direccion = $oContacto->getDs_direccion();

        $ds_telefono = $oContacto->getDs_telefono();
        $ds_movil = $oContacto->getDs_movil();
        $ds_telefonotrabajo = $oContacto->getDs_telefonotrabajo();

        $ds_email = $oContacto->getDs_email();

		$nu_documento = $oContacto->getNu_documento();
        $nu_cuit = $oContacto->getNu_cuit();

        $sql = "UPDATE contacto SET ds_apynom = '$ds_apynom', ds_movil = '$ds_movil', ds_telefonotrabajo = '$ds_telefonotrabajo', ds_direccion = '$ds_direccion', ds_telefono = '$ds_telefono', ds_email = '$ds_email', nu_documento = '$nu_documento', nu_cuit = '$nu_cuit' WHERE cd_contacto = $cd_contacto ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarContacto(Contacto $oContacto) {
        $db = DbManager::getConnection();

        $cd_contacto = $oContacto->getCd_contacto();

        $sql = "DELETE FROM contacto WHERE cd_contacto = $cd_contacto ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());


        $db->sql_freeresult($result);
    }

    public static function getContactos(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM contacto P";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new ContactoFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantContactos(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM contacto P";
      
        $sql .= $criterio->buildFiltroSinPaginar();
        
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getContacto(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM contacto P";
       
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new ContactoFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

}
?>
