<?php

/**
 * Autogenerated class 
 *  
 *  @author modelBuilder 
 *  @since 05-12-2011
 */
class ConceptoDAO {

    public static function insertarConcepto(Concepto $oConcepto) {
        $db = DbManager::getConnection();


        $cd_concepto = $oConcepto->getCd_concepto();

        $cd_tipoconcepto = $oConcepto->getCd_tipoconcepto();

        $cd_tipooperacion = $oConcepto->getCd_tipooperacion();

        $ds_concepto = $oConcepto->getDs_concepto();


        $sql = "INSERT INTO concepto (cd_tipoconcepto, cd_tipooperacion, ds_concepto) VALUES('$cd_tipoconcepto', '$cd_tipooperacion', '$ds_concepto')";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function modificarConcepto(Concepto $oConcepto) {
        $db = DbManager::getConnection();


        $cd_concepto = $oConcepto->getCd_concepto();

        $cd_tipoconcepto = $oConcepto->getCd_tipoconcepto();

        $cd_tipooperacion = $oConcepto->getCd_tipooperacion();

        $ds_concepto = $oConcepto->getDs_concepto();



        $sql = "UPDATE concepto SET cd_tipoconcepto = '$cd_tipoconcepto', cd_tipooperacion = '$cd_tipooperacion', ds_concepto = '$ds_concepto' WHERE cd_concepto = $cd_concepto ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function eliminarConcepto(Concepto $oConcepto) {
        $db = DbManager::getConnection();

        $cd_concepto = $oConcepto->getCd_concepto();

        $sql = "DELETE FROM concepto WHERE cd_concepto = $cd_concepto ";

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $db->sql_freeresult($result);
    }

    public static function getConceptos(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM concepto C";
        $sql .=" LEFT JOIN tipoconcepto TC on (TC.cd_tipoconcepto = C.cd_tipoconcepto)";
        $sql .=" LEFT JOIN tipooperacion as T_O on (T_O.cd_tipooperacion = C.cd_tipooperacion)";
        $sql .= $criterio->buildFiltro();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $items = ResultFactory::toCollection($db, $result, new ConceptoFactory());
        $db->sql_freeresult($result);
        return $items;
    }

    public static function getCantConceptos(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT count(*) as count FROM concepto C ";
        $sql .=" LEFT JOIN tipoconcepto TC on (TC.cd_tipoconcepto = C.cd_tipoconcepto)";
        $sql .=" LEFT JOIN tipooperacion as T_O on (T_O.cd_tipooperacion = C.cd_tipooperacion)";
        $sql .= $criterio->buildFiltroSinPaginar();
        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        $next = $db->sql_fetchassoc($result);
        $cant = $next['count'];
        $db->sql_freeresult($result);
        return ((int) $cant);
    }

    public static function getConcepto(CriterioBusqueda $criterio) {
        $db = DbManager::getConnection();


        $sql = "SELECT * FROM concepto C";
        $sql .=" LEFT JOIN tipoconcepto TC on (TC.cd_tipoconcepto = C.cd_tipoconcepto)";
        $sql .=" LEFT JOIN tipooperacion as T_O on (T_O.cd_tipooperacion = C.cd_tipooperacion)";
        $sql .= $criterio->buildFiltro();

        $result = $db->sql_query($sql);
        if (!$result)//hubo un error en la bbdd.
            throw new DBException($db->sql_error());

        if ($db->sql_numrows() > 0) {
            $temp = $db->sql_fetchassoc($result);
            $factory = new ConceptoFactory();
            $obj = $factory->build($temp);
        }
        $db->sql_freeresult($result);
        return $obj;
    }

}
?>
