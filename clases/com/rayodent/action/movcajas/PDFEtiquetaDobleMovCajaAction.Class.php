<?phpclass PDFEtiquetaDobleMovCajaAction extends Action {    protected function getOrdenpractica() {        $cd_movcaja = FormatUtils::getParam('id', 0);        $criterio = new CriterioBusqueda();        $criterio->addFiltro("OP.cd_movcaja", $cd_movcaja, "=");        $manager = new OrdenpracticaManager();        $oOrdenPractica = $manager->getOrdenpractica($criterio);        return $oOrdenPractica;    }    protected function getTitulo() {        return 'Movimiento de Caja';    }    public function execute() {        try {            $this->execute_pdf();        } catch (GenericException $ex) {            //CdtUtils::log_debug("No se puede imprimir la etiqueta porque no hay una pr�ctica.");            $forward = $this->getForwardError();            $this->setDs_forward_params('er=1' . '&msg=' . $ex->getMessage() . '&code=' . $ex->getCode());            return $forward;        }    }    public function execute_pdf() {        $cd_movcaja = FormatUtils::getParam('id', 0);        $oOrdenpractica = $this->getOrdenpractica();        if (!empty($oOrdenpractica)) {        	$criterio = new CriterioBusqueda();	        $criterio->addFiltro("MC.cd_movcaja", $cd_movcaja, "=");		        $movcajaManager = new MovcajaManager();		        $oMovcaja = $movcajaManager->getMovcaja($criterio);	        $etiqueta = $oMovcaja->getNu_etiquetadoble()+1;	        $oMovcaja->setNu_etiquetadoble($etiqueta);	        $movcajaManager->modificarMovcaja($oMovcaja,1);            $pdf = new PDFPrint('L', 'cm', array(5, 8));            $pdf = $this->generarEtiqueta($pdf, $oOrdenpractica, $cd_movcaja);            $pdf->Output("etiqueta_$cd_movcaja.pdf", 'D');        } else {            throw new GenericException("No se imprimir� la etiqueta porque el movimiento no tiene pr�cticas");        }    }    public function generarEtiqueta($pdf, $oOrdenpractica, $cd_movcaja) {        //armamos el pdf.        $pdf->SetFont('Arial', '', 9);        $pdf->AddPage();        // Contenido 1        //Margin top        $altocelda = 0.4;        $pdf->SetTopMargin(0.5);        $pdf->SetY(0.5);        $pdf->SetLeftMargin(0.5);        $pdf->SetX(0.5);        $pdf->SetAutoPageBreak(false);        $pdf->Cell(1.9, $altocelda, "Paciente: ", 0, 0, 'L');        $info_paciente = $oOrdenpractica->getPaciente()->getDs_apynom() . " (" . $oOrdenpractica->getCd_paciente() . ")";        $pdf->MultiCell(5.5, $altocelda, $info_paciente, 0, 'L', 0);        $pdf->Cell(1.9, $altocelda, "Profesional: ", 0, 0, 'L');        $pdf->MultiCell(5.5, $altocelda, $oOrdenpractica->getProfesional()->getDs_nombre(), 0, 'L', 0);        $pdf->Cell(1.9, $altocelda, "Fecha: ", 0, 0, 'L');        $datetime = explode(" ", FuncionesComunes::fechaHoraMysqlaPHP($oOrdenpractica->getMovcaja()->getDt_movcaja()));        $pdf->Cell(3, $altocelda, $datetime[0], 0, 1, 'L');        $this->parsePracticas($pdf, $oOrdenpractica);        //$pdf->SetX(0.5);        $pdf->Ln();        // Contenido 2        //Margin top        $pdf->SetY($pdf->GetY());        $pdf->SetX(0.5);        $pdf->Cell(1.9,$altocelda, "Paciente: ", 0, 0, 'L');        $info_paciente = $oOrdenpractica->getPaciente()->getDs_apynom() . " (" . $oOrdenpractica->getCd_paciente() . ")";        $pdf->MultiCell(5.5, $altocelda, $info_paciente, 0, 'L', 0);        $pdf->Cell(1.9, $altocelda, "Profesional: ", 0, 0, 'L');        $pdf->MultiCell(5.5, $altocelda, $oOrdenpractica->getProfesional()->getDs_nombre(), 0, 'L', 0);        $pdf->Cell(1.9, $altocelda, "Fecha: ", 0, 0, 'L');        $datetime = explode(" ", FuncionesComunes::fechaHoraMysqlaPHP($oOrdenpractica->getMovcaja()->getDt_movcaja()));        $pdf->Cell(3, 0.5, $datetime[0], 0, 1, 'L');        $this->parsePracticas($pdf, $oOrdenpractica);        return $pdf;    }    public function parsePracticas($pdf, $oOrdenpractica) {        $cd_movcaja = FormatUtils::getParam('id', 0);        if ($cd_movcaja != 0) {            $oPracticaOrdenPracticaManager = new PracticaordenpracticaManager();            $oMovcajaconceptoManager = new MovcajaconceptoManager();            $criterio = new CriterioBusqueda();            $criterio->addFiltro("MC.cd_movcaja", $cd_movcaja, "=");            $movcajaconceptos = $oMovcajaconceptoManager->getMovcajaconceptos($criterio);            $i = 0;            $contenido = "";            foreach ($movcajaconceptos as $movcajaconcepto) {                $criterio_practica = new CriterioBusqueda();                $criterio_practica->addFiltro("MCC.cd_movcajaconcepto", $movcajaconcepto->getCd_movcajaconcepto(), "=");                $oPracticaOrdenPractica = $oPracticaOrdenPracticaManager->getPracticaordenpractica($criterio_practica);                if ($oPracticaOrdenPractica != false) {                    $witdh = strlen($oPracticaOrdenPractica->getPracticaobrasocial()->getPractica()->getDs_practica());                    if ($i == 0) {                        $contenido .= "RX " . $oPracticaOrdenPractica->getPracticaobrasocial()->getPractica()->getDs_practica();                        $i++;                    } else {                        $contenido .= " | RX " . $oPracticaOrdenPractica->getPracticaobrasocial()->getPractica()->getDs_practica();                    }                }            }            $pdf->MultiCell(6, 0.4, $contenido);        }    }    protected function getContenido() {        return false;    }    public function getForwardError() {        return "pdf_etiqueta_movcaja_error";    }}